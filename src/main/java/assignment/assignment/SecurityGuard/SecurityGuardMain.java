package assignment.assignment.SecurityGuard;

import assignment.assignment.LoginPage;
import assignment.assignment.LoginPage1;
import static assignment.assignment.SecurityGuard.DateTimeDialog.setComboBox;
import assignment.assignment.User;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author leeyu
 */
public class SecurityGuardMain extends javax.swing.JFrame {
    private User user;
    private SecurityGuard security;

    /**
     * Creates new form SecuritySystem
     */
    public SecurityGuardMain(User user) {
        this.user = user;
        try {
            File file = new File("src/main/java/assignment/assignment/TxtFile/SecurityGuardInfo.txt");         
            BufferedReader br = new BufferedReader(new FileReader(file));    
            String line;            

            while ((line = br.readLine()) != null) {
                String[] splitLine = line.split(";");
                if (splitLine[2].equals(Integer.toString(user.getUserId()))) {
                    this.security = new SecurityGuard(user.getUserId(), user.getPassword(), user.getName(),
                            user.getEmail(), user.getRole(), splitLine[0], splitLine[1]) {};
                }
            }
            br.close();
        }catch (IOException e) {
            System.out.println("fail");
            }
        initComponents();
        setComboBox(checkInList, 3, "PatrolSchedule.txt");
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageVisitorPassBtn = new javax.swing.JButton();
        visitorEntryBtn = new javax.swing.JButton();
        recordIncidentBtn = new javax.swing.JButton();
        checkpointCheckInBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        visitorDepartBtn = new javax.swing.JButton();
        checkInList = new javax.swing.JComboBox<>();
        updateIncidentBtn = new javax.swing.JButton();
        LogOutBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        manageVisitorPassBtn.setText("View Visitor Pass");
        manageVisitorPassBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageVisitorPassBtnActionPerformed(evt);
            }
        });

        visitorEntryBtn.setText("Visitor Check In");
        visitorEntryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorEntryBtnActionPerformed(evt);
            }
        });

        recordIncidentBtn.setText("Record Incident");
        recordIncidentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordIncidentBtnActionPerformed(evt);
            }
        });

        checkpointCheckInBtn.setText("Checkpoint Check-in");
        checkpointCheckInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkpointCheckInBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Security Guard");

        visitorDepartBtn.setText("Visitor Check Out");
        visitorDepartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitorDepartBtnActionPerformed(evt);
            }
        });

        checkInList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        updateIncidentBtn.setText("Update Incident");
        updateIncidentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateIncidentBtnActionPerformed(evt);
            }
        });

        LogOutBTN.setText("Log Out");
        LogOutBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(manageVisitorPassBtn)
                            .addComponent(visitorEntryBtn)
                            .addComponent(checkInList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(recordIncidentBtn))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateIncidentBtn)
                            .addComponent(visitorDepartBtn)
                            .addComponent(checkpointCheckInBtn))
                        .addContainerGap(60, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LogOutBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(LogOutBTN))
                .addGap(18, 18, 18)
                .addComponent(manageVisitorPassBtn)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(visitorEntryBtn)
                    .addComponent(visitorDepartBtn))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recordIncidentBtn)
                    .addComponent(updateIncidentBtn))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkpointCheckInBtn)
                    .addComponent(checkInList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void manageVisitorPassBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageVisitorPassBtnActionPerformed
        // TODO add your handling code here:
        new VisitorPassView(user).setVisible(true);
        dispose();
    }//GEN-LAST:event_manageVisitorPassBtnActionPerformed

    private void visitorEntryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorEntryBtnActionPerformed
        // TODO add your handling code here:
        new VisitorEntryForm(user).setVisible(true);
        dispose();
    }//GEN-LAST:event_visitorEntryBtnActionPerformed

    private void visitorDepartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitorDepartBtnActionPerformed
        // TODO add your handling code here:
        new VisitorDepartureForm(user).setVisible(true);
        dispose();
    }//GEN-LAST:event_visitorDepartBtnActionPerformed

    private void updateIncidentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateIncidentBtnActionPerformed
        // TODO add your handling code here:
        new IncidentUpdateForm(user).setVisible(true);
        dispose();
    }//GEN-LAST:event_updateIncidentBtnActionPerformed

    private void recordIncidentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordIncidentBtnActionPerformed
        // TODO add your handling code here:
        new IncidentForm(user).setVisible(true);
        dispose();
    }//GEN-LAST:event_recordIncidentBtnActionPerformed

    private void checkpointCheckInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkpointCheckInBtnActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String checkPoint = (String) checkInList.getSelectedItem();
        String guardID = security.getSecurityGuardID();
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        String formattedDateTime = now.format(formatter);

        if (checkPoint == null) {
            JOptionPane.showMessageDialog(this, "Please fill in Checkpoint", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Read input file and store in StringBuffer
            BufferedReader file = new BufferedReader(new FileReader("src/main/java/assignment/assignment/TxtFile/PatrolSchedule.txt"));
            StringBuilder inputBuffer = new StringBuilder();
            String line;

            while ((line = file.readLine()) != null) {
                String[] parts = line.split(";");
                String lineTitle = parts[0];

                if (lineTitle.equals(checkPoint)) {
                   line = checkPoint + ";" + parts[1] + ";" + formattedDateTime + ";" + guardID;
                }
                    

                inputBuffer.append(line);
                inputBuffer.append('\n');
            }

            file.close();

            // Write the modified string to the same file
            FileOutputStream fileOut = new FileOutputStream("src/main/java/assignment/assignment/TxtFile/PatrolSchedule.txt");
            fileOut.write(inputBuffer.toString().getBytes());
            fileOut.close();
            JOptionPane.showMessageDialog(this, "Checkpoint Checkin recorded successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error updating file", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }  

        // update the combo box selection
        setComboBox(checkInList, 3, "PatrolSchedule.txt");                                            

    }//GEN-LAST:event_checkpointCheckInBtnActionPerformed

    private void LogOutBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutBTNActionPerformed
        // TODO add your handling code here:
        LoginPage LoginPage = new LoginPage();
        this.dispose();
        LoginPage.setVisible(true);
    }//GEN-LAST:event_LogOutBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SecurityGuardMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SecurityGuardMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SecurityGuardMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecurityGuardMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LogOutBTN;
    private javax.swing.JComboBox<String> checkInList;
    private javax.swing.JButton checkpointCheckInBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton manageVisitorPassBtn;
    private javax.swing.JButton recordIncidentBtn;
    private javax.swing.JButton updateIncidentBtn;
    private javax.swing.JButton visitorDepartBtn;
    private javax.swing.JButton visitorEntryBtn;
    // End of variables declaration//GEN-END:variables
}
