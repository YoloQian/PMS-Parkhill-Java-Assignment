/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment.assignment.AdminExecutives;

import java.awt.Component;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
/**
 *
 * @author user
 */
public class FacilityBookingNew extends javax.swing.JFrame {

    /**
     * Creates new form Facilitybookingnew
     */
    public FacilityBookingNew() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        facilitybookingnewLABEL = new javax.swing.JLabel();
        backBTN = new javax.swing.JButton();
        newfacilitybookingPANEL = new javax.swing.JPanel();
        facilitynameLABEL = new javax.swing.JLabel();
        tenantnameLABEL = new javax.swing.JLabel();
        bookingdateLABEL = new javax.swing.JLabel();
        starttimeLABEL = new javax.swing.JLabel();
        endtimeLABEL = new javax.swing.JLabel();
        facilitynameTF = new javax.swing.JTextField();
        tenantidTF = new javax.swing.JTextField();
        starttimeTP = new com.github.lgooddatepicker.components.TimePicker();
        endtimeTP = new com.github.lgooddatepicker.components.TimePicker();
        newBTN = new javax.swing.JButton();
        bookingdateTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        facilitybookingnewLABEL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        facilitybookingnewLABEL.setText("New Facility Booking");
        facilitybookingnewLABEL.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        backBTN.setText("Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        newfacilitybookingPANEL.setBorder(javax.swing.BorderFactory.createTitledBorder("New Facility Booking"));

        facilitynameLABEL.setText("Facility Name :");

        tenantnameLABEL.setText("Tenant ID :");

        bookingdateLABEL.setText("Booking Date (YY-MM-DD) :");

        starttimeLABEL.setText("Start Time :");

        endtimeLABEL.setText("End Time :");

        newBTN.setText("New");
        newBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newfacilitybookingPANELLayout = new javax.swing.GroupLayout(newfacilitybookingPANEL);
        newfacilitybookingPANEL.setLayout(newfacilitybookingPANELLayout);
        newfacilitybookingPANELLayout.setHorizontalGroup(
            newfacilitybookingPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newfacilitybookingPANELLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newfacilitybookingPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(facilitynameLABEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tenantnameLABEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bookingdateLABEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(starttimeLABEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(endtimeLABEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newfacilitybookingPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(facilitynameTF)
                    .addComponent(tenantidTF)
                    .addGroup(newfacilitybookingPANELLayout.createSequentialGroup()
                        .addGroup(newfacilitybookingPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newBTN)
                            .addComponent(starttimeTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(endtimeTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(bookingdateTF))
                .addContainerGap())
        );
        newfacilitybookingPANELLayout.setVerticalGroup(
            newfacilitybookingPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newfacilitybookingPANELLayout.createSequentialGroup()
                .addGroup(newfacilitybookingPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facilitynameLABEL)
                    .addComponent(facilitynameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newfacilitybookingPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tenantnameLABEL)
                    .addComponent(tenantidTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newfacilitybookingPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookingdateLABEL)
                    .addComponent(bookingdateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newfacilitybookingPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(starttimeLABEL)
                    .addComponent(starttimeTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newfacilitybookingPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endtimeLABEL)
                    .addComponent(endtimeTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(newBTN)
                .addGap(0, 45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newfacilitybookingPANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(facilitybookingnewLABEL, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(backBTN)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(backBTN)
                    .addComponent(facilitybookingnewLABEL, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newfacilitybookingPANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        // TODO add your handling code here:
        FacilityBookingManagementMenu FacilityBookingManagementMenu = new FacilityBookingManagementMenu();
        this.dispose();
        FacilityBookingManagementMenu.setVisible(true);
    }//GEN-LAST:event_backBTNActionPerformed

    private void newBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBTNActionPerformed
        // TODO add your handling code here:
        try{
                File file = new File("src/main/java/assignment/assignment/TxtFile/FacilityBooking.txt");
                FileWriter fw = new FileWriter(file,true);
                BufferedWriter bw = new BufferedWriter(fw);


                String fileName = "src/main/java/assignment/assignment/TxtFile/FacilityBooking.txt";
                String facilitybookingid = generateNewFacilityBookingID(fileName);
                String facilityname = facilitynameTF.getText();
                String tenantid = tenantidTF.getText();
                String bookingdate = bookingdateTF.getText();
                String starttime = starttimeTP.getText();
                String endtime = endtimeTP.getText();

                String message = "Are you sure you want to add this new Facility Booking?\n\n"
                        + "Facility ID : " + facilitybookingid + "\n"
                        + "Facility Name : " + facilityname + "\n"
                        + "Tenant ID : " + tenantid + "\n"
                        + "Booking Date (YY-MM-DD) : " + bookingdate + "\n"
                        + "Start Time : " + starttime + "\n"
                        + "End Time : " + endtime;

                int confirmation = JOptionPane.showConfirmDialog((Component) null, message, "Confirm Add", JOptionPane.YES_NO_OPTION);

                if (confirmation == JOptionPane.YES_OPTION) {
                    try (PrintWriter pw = new PrintWriter(bw)) {
                        pw.println(facilitybookingid + ";;" + facilityname + ";" + tenantid + ";" + bookingdate + ";" + starttime + ";" + endtime);
                    }
                    System.out.println("Success");  
                } else {
                    System.out.println("Cancelled by user");
                }

            } catch (IOException e) {
                System.out.println("Fail");
            }
    }//GEN-LAST:event_newBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FacilityBookingNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FacilityBookingNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FacilityBookingNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FacilityBookingNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FacilityBookingNew().setVisible(true);
            }
        });
    }
    
    public static String generateNewFacilityBookingID(String fileName) {
        String lastFacilityBookingID = null;
        try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
            String line;
            br.readLine();
            while ((line = br.readLine()) != null) {
                lastFacilityBookingID = line;
            }
        } catch (IOException e) {
        }
        
        String NewFacilityBookingID;
        if (lastFacilityBookingID == null) {
            NewFacilityBookingID = "FBooking001";
        } else {
            int num = Integer.parseInt(lastFacilityBookingID.substring(8,11));
            num++;
            NewFacilityBookingID = "FBooking" + String.format("%03d", num);
        }
        return NewFacilityBookingID;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBTN;
    private javax.swing.JLabel bookingdateLABEL;
    private javax.swing.JTextField bookingdateTF;
    private javax.swing.JLabel endtimeLABEL;
    private com.github.lgooddatepicker.components.TimePicker endtimeTP;
    private javax.swing.JLabel facilitybookingnewLABEL;
    private javax.swing.JLabel facilitynameLABEL;
    private javax.swing.JTextField facilitynameTF;
    private javax.swing.JButton newBTN;
    private javax.swing.JPanel newfacilitybookingPANEL;
    private javax.swing.JLabel starttimeLABEL;
    private com.github.lgooddatepicker.components.TimePicker starttimeTP;
    private javax.swing.JTextField tenantidTF;
    private javax.swing.JLabel tenantnameLABEL;
    // End of variables declaration//GEN-END:variables
}
