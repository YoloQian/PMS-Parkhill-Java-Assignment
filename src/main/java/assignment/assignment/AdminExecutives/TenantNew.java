/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment.assignment.AdminExecutives;

import java.awt.Component;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class TenantNew extends javax.swing.JFrame {

    /**
     * Creates new form Tenantnew
     */
    public TenantNew() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tenantnewPANEL = new javax.swing.JPanel();
        nameLABEL = new javax.swing.JLabel();
        emailLABEL = new javax.swing.JLabel();
        passwordLABEL = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        emailTF = new javax.swing.JTextField();
        newBTN = new javax.swing.JButton();
        passwordTF = new javax.swing.JTextField();
        backBTN = new javax.swing.JButton();
        tenantnewLABEL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tenantnewPANEL.setBorder(javax.swing.BorderFactory.createTitledBorder("New Resident/Tenant"));

        nameLABEL.setText("Name :");

        emailLABEL.setText("Email :");

        passwordLABEL.setText("Password :");

        newBTN.setText("New");
        newBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tenantnewPANELLayout = new javax.swing.GroupLayout(tenantnewPANEL);
        tenantnewPANEL.setLayout(tenantnewPANELLayout);
        tenantnewPANELLayout.setHorizontalGroup(
            tenantnewPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tenantnewPANELLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tenantnewPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameLABEL, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(emailLABEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordLABEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tenantnewPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tenantnewPANELLayout.createSequentialGroup()
                        .addComponent(newBTN)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tenantnewPANELLayout.createSequentialGroup()
                        .addGroup(tenantnewPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(passwordTF, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTF, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailTF, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap())))
        );
        tenantnewPANELLayout.setVerticalGroup(
            tenantnewPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tenantnewPANELLayout.createSequentialGroup()
                .addGroup(tenantnewPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLABEL)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tenantnewPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailLABEL)
                    .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tenantnewPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordLABEL)
                    .addComponent(passwordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newBTN))
        );

        backBTN.setText("Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        tenantnewLABEL.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tenantnewLABEL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tenantnewLABEL.setText("New Resident/Tenant");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tenantnewPANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tenantnewLABEL, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(backBTN)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(backBTN)
                    .addComponent(tenantnewLABEL, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tenantnewPANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        // TODO add your handling code here:
        TenantManagementMenu TenantManagementMenu = new TenantManagementMenu();
        this.dispose();
        TenantManagementMenu.setVisible(true);
    }//GEN-LAST:event_backBTNActionPerformed

    private void newBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBTNActionPerformed
        // TODO add your handling code here:
        try{
                File file = new File("src/main/java/assignment/assignment/TxtFile/UserInfo.txt");
                FileWriter fw = new FileWriter(file,true);
                BufferedWriter bw = new BufferedWriter(fw);
                
                File filetenant = new File("src/main/java/assignment/assignment/TxtFile/TenantInfo.txt");
                FileWriter fwtenant = new FileWriter(filetenant,true);
                BufferedWriter bwtenant = new BufferedWriter(fwtenant);

                String fileName = "src/main/java/assignment/assignment/TxtFile/UserInfo.txt";
                String fileNametenant = "src/main/java/assignment/assignment/TxtFile/TenantInfo.txt";
                String userid = generateNewUserID(fileName);
                String tenantid = generateNewTenantID(fileNametenant);
                String name = nameTF.getText();
                String email = emailTF.getText();
                String password = passwordTF.getText();

                String message = "Are you sure you want to add this new Resident/Tenant?\n\n"
                        + "User ID : " + userid + "\n"
                        + "Tenant ID : " + tenantid + "\n"
                        + "Name : " + name + "\n"
                        + "Email : " + email + "\n"
                        + "Password : " + password;

                int confirmation = JOptionPane.showConfirmDialog((Component) null, message, "Confirm Add", JOptionPane.YES_NO_OPTION);

                if (confirmation == JOptionPane.YES_OPTION) {
                    try (PrintWriter pw = new PrintWriter(bw)) {
                        pw.println(userid + ";" + password + ";" + "tenant" + ";" + name + ";" + email);
                    }
                    try (PrintWriter pwtenant = new PrintWriter(bwtenant)) {
                        pwtenant.println(tenantid + ";" + userid + ";null;null;null");
                    }
                    System.out.println("Success");  
                } else {
                    System.out.println("Cancelled by user");
                }

            } catch (IOException e) {
                System.out.println("Fail");
            }
    }//GEN-LAST:event_newBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TenantNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TenantNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TenantNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TenantNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TenantNew().setVisible(true);
            }
        });
    }

    public static String generateNewUserID(String fileName) {
            String lastUserID = null;
            try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
                String line;
                br.readLine();
                while ((line = br.readLine()) != null) {
                    String[] parts = line.split(";");
                    lastUserID = parts[0];
                }
            } catch (IOException e) {
            }

            String NewUserID;
            if (lastUserID == null) {
                NewUserID = "1";
            } else {
                int num = Integer.parseInt(lastUserID) + 1;
                NewUserID = String.valueOf(num);
            }
            return NewUserID;
        }

    public static String generateNewTenantID(String fileNametenant) {
            String lastTenantID = null;
            try (BufferedReader brtenant = new BufferedReader(new FileReader(fileNametenant))) {
                String line;
                brtenant.readLine();
                while ((line = brtenant.readLine()) != null) {
                    lastTenantID = line;
                }
            } catch (IOException e) {
            }

            String NewTenantID;
            if (lastTenantID == null) {
                NewTenantID = "Tenant001";
            } else {
                int num = Integer.parseInt(lastTenantID.substring(6,9));
                num++;
                NewTenantID = "Tenant" + String.format("%03d", num);
            }
            return NewTenantID;
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBTN;
    private javax.swing.JLabel emailLABEL;
    private javax.swing.JTextField emailTF;
    private javax.swing.JLabel nameLABEL;
    private javax.swing.JTextField nameTF;
    private javax.swing.JButton newBTN;
    private javax.swing.JLabel passwordLABEL;
    private javax.swing.JTextField passwordTF;
    private javax.swing.JLabel tenantnewLABEL;
    private javax.swing.JPanel tenantnewPANEL;
    // End of variables declaration//GEN-END:variables
}
